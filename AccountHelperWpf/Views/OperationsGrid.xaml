<UserControl x:Class="AccountHelperWpf.Views.OperationsGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AccountHelperWpf.Views"
             xmlns:viewModels="clr-namespace:AccountHelperWpf.ViewModels"
             xmlns:viewUtils="clr-namespace:AccountHelperWpf.ViewUtils"
             mc:Ignorable="d" 
             x:Name="OperationGrid"
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance viewModels:OperationsVM}">
    <UserControl.Resources>
        <viewUtils:AmountToColorConverter x:Key="AmountToColorConverter"
                                          PositiveAmountColor="{DynamicResource SystemFillColorCautionBackgroundBrush}"
                                          NegativeAmountColor="{DynamicResource ControlFillColorDefaultBrush}"/>
    </UserControl.Resources>
    <local:DataGridExt ColumnDescriptions="{Binding ColumnDescriptions, Mode=OneWay}"
                       SelectedItemsList="{Binding SelectedItems, Mode=TwoWay}"
                       ItemsSource="{Binding Operations}">
        <DataGrid.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Search info in web" Command="{Binding SearchInfoCommand}"
                          IsEnabled="{Binding IsSingleSelection}"/>
                <MenuItem Header="Set As Last (new)" Command="{Binding SetLastOperationCommand}"
                          IsEnabled="{Binding IsSingleSelection}"/>
                <MenuItem Header="Set As First (old)" Command="{Binding SetFirstOperationCommand}"
                          IsEnabled="{Binding IsSingleSelection}"/>
                <MenuItem Header="Apply this Category for same operations" Command="{Binding ApplyCategoryForSimilarOperationsCommand}"
                          IsEnabled="{Binding IsSingleSelection}"/>
                <MenuItem Header="Add exception for associations" Command="{Binding AddExceptionCommand}"/>
                <MenuItem Header="Highlight">
                    <MenuItem Header="Highlight similar operations" Command="{Binding HighlightSimilarOperations}" IsEnabled="{Binding IsSingleSelection}"/>
                    <MenuItem Header="Highlight same category" Command="{Binding HighlightSameCategory}" IsEnabled="{Binding IsSingleSelection}"/>
                    <MenuItem Header="Reset Highlight" Command="{Binding ResetHighlight}"/>
                </MenuItem>
            </ContextMenu>
        </DataGrid.ContextMenu>
        <DataGrid.Columns>
            <DataGridTextColumn Width="140" IsReadOnly="True" Binding="{Binding Operation.TransactionDateTime, StringFormat='yyyy-MM-dd HH:mm:ss'}" Header="Operation Date Time" />
            <DataGridTextColumn Width="65" IsReadOnly="True" Binding="{Binding Operation.Amount}"
                                Header="Amount" FontWeight="Bold">
                <DataGridTextColumn.ElementStyle>
                    <Style TargetType="{x:Type TextBlock}" >
                        <Setter Property="Background"
                                Value="{Binding Path=Operation.Amount,
                                    Converter={StaticResource AmountToColorConverter}}" />
                        <Setter Property="TextAlignment" Value="Right"/>
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>
            <DataGridTextColumn Width="520" IsReadOnly="True" Binding="{Binding Operation.Description}" Header="Comment" />
            <DataGridTemplateColumn>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate DataType="{x:Type viewModels:OperationVM}">
                        <Image Width="32" Height="32" ToolTip="{Binding AssociationStatusComment}">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger  Binding="{Binding AssociationStatus}" Value="None">
                                            <Setter Property="Source" Value="{x:Null}"/>
                                        </DataTrigger >
                                        <DataTrigger  Binding="{Binding AssociationStatus}" Value="Associated">
                                            <Setter Property="Source" Value="/Resources/UtilsIcons/associated.png"/>
                                        </DataTrigger >
                                        <DataTrigger  Binding="{Binding AssociationStatus}" Value="NotMatch">
                                            <Setter Property="Source" Value="/Resources/UtilsIcons/warning.png"/>
                                        </DataTrigger >
                                        <DataTrigger  Binding="{Binding AssociationStatus}" Value="Excluded">
                                            <Setter Property="Source" Value="/Resources/UtilsIcons/exclamation.png"/>
                                        </DataTrigger >
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate DataType="{x:Type viewModels:OperationVM}">
                        <Button Content="OK" ToolTip="Approve operation with auto-mapped category (where there is some association)"
                                Command="{Binding ElementName=OperationGrid, Path=DataContext.ApproveSelectedCommand}"
                                Visibility="{Binding IsAutoMappedNotApproved, Converter={StaticResource VisibilityConverter}}"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn x:Name="CategoriesColumn" Width="130" Header="Categories" CanUserSort="True" SortMemberPath="Category">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate DataType="{x:Type viewModels:OperationVM}">
                        <ComboBox ItemsSource="{Binding ElementName=OperationGrid, Path=DataContext.Categories, Mode=OneTime}"
                                  SelectedItem="{Binding Category, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate DataType="{x:Type viewModels:OperationVM}">
                        <Button Content="+"
                                Command="{Binding ElementName=OperationGrid, Path=DataContext.AddCommand}"
                                CommandParameter="{Binding}"
                                Visibility="{Binding IsAddAssociationPossible, Converter={StaticResource VisibilityConverter}}"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTextColumn x:Name="CommentColumn" Width="120" Binding="{Binding Comment}" Header="Pinned Comment" />
        </DataGrid.Columns>
        <DataGrid.RowStyle>
            <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                        <Setter Property="Background" Value="{DynamicResource SystemFillColorSuccessBackgroundBrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </DataGrid.RowStyle>
    </local:DataGridExt>

</UserControl>
